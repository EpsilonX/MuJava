package MYS.op;

import java.io.*;
import java.util.Enumeration;
import openjava.ptree.*;
import openjava.mop.Environment;
import MYS.op.util.MutantCodeWriter;

public class JID_Writer extends MutantCodeWriter
{

    FieldDeclaration mutant = null;

    public void setMutant(FieldDeclaration mutant){
      this.mutant = mutant;
    }

    public JID_Writer( PrintWriter out ) {
	super(out);
	this.out = out;
    }

    public void visit( FieldDeclaration p )
	throws ParseTreeException
    {
        printComment(p);
        writeTab();
        /*ModifierList*/
        ModifierList modifs = p.getModifiers();
        if (modifs != null) {
            modifs.accept( this );
            if (! modifs.isEmptyAsRegular())  out.print( " " );
        }

        /*TypeName*/
        TypeName ts = p.getTypeSpecifier();
        ts.accept(this);

        out.print(" ");

        /*Variable*/
        String variable = p.getVariable();
        out.print(variable);

	if(p.eq(mutant)){
	  mutated_line = line_num;
	  writeLog(removeNewline(mutant.toString())+" is deleted");
	  out.println("// "+mutant.toString()); line_num++;
	// -------------------------------------------------------------

	  System.out.println(" JID " + mutant.toString());


	}else{
          /*"=" VariableInitializer*/
          VariableInitializer initializer = p.getInitializer();
          if (initializer != null) {
              out.print(" = ");
              initializer.accept(this);
          }
	}
        /*";"*/
        out.print(";");

        out.println();
    }

}
