package MYS.op;

import java.io.*;
import openjava.ptree.*;
import MYS.op.util.MutantCodeWriter;


public class IHD_Writer extends MutantCodeWriter
{

    FieldDeclaration original = null;
    FieldDeclaration mutant = null;

    public void setMutant(FieldDeclaration original,FieldDeclaration mutant){
      this.original = original;
      this.mutant = mutant;
    }

    public IHD_Writer( String file_name, PrintWriter out ) {
	super(file_name,out);
    }

    public void visit( FieldDeclaration p )
	throws ParseTreeException
    {
      if(!p.eq(original)){
        super.visit(p);
      } else{
        printComment(p);
        writeTab();
		  out.print("// ");

        /*ModifierList*/
        ModifierList modifs = p.getModifiers();
        if (modifs != null) {
            modifs.accept( this );
            if (! modifs.isEmptyAsRegular())  out.print( " " );
        }

        /*TypeName*/
        TypeName ts = p.getTypeSpecifier();
        ts.accept(this);

        out.print(" ");

        /*Variable*/
        String variable = p.getVariable();
        out.print(variable);

        /*"=" VariableInitializer*/
        VariableInitializer initializer = p.getInitializer();
        if (initializer != null) {
            out.print(" = ");
            initializer.accept(this);
        }
        /*";"*/
        out.print(";");

	// -------------------------
	mutated_line = line_num;
	writeLog(removeNewline(mutant.toString())+" is deleted.");
	// -------------------------

        out.println(); line_num++;
      }
    }
}
