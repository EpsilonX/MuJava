package MYS.op;

import java.io.*;
import java.util.Enumeration;
import openjava.ptree.*;
import openjava.mop.Environment;
import MYS.op.util.MutantCodeWriter;

public class PMD_Writer extends MutantCodeWriter
{

    FieldDeclaration original_field = null;
    FieldDeclaration mutant_field = null;

    VariableDeclaration original_var = null;
    VariableDeclaration mutant_var = null;

    public void setMutant(FieldDeclaration original,FieldDeclaration mutant){
      this.original_field = original;
      this.mutant_field = mutant;
    }

    public void setMutant(VariableDeclaration original,VariableDeclaration mutant){
      this.original_var = original;
      this.mutant_var = mutant;
    }

    public PMD_Writer( String file_name, PrintWriter out ) {
	super(file_name,out);
    }

    public void visit( FieldDeclaration p )
	throws ParseTreeException
    {
      if(p.eq(original_field)){
		 // -------------------------------------------------------------
		 mutated_line = line_num;
		 visit(mutant_field);
		 writeLog(removeNewline(original_field.toString()+" => "+mutant_field.toString()));
		 // -------------------------------------------------------------
      }else{
		  super.visit(p);
      }
    }


    public void visit( VariableDeclaration p )
	 throws ParseTreeException
    {
      if(p.eq(original_var)){
			// -------------------------------------------------------------
			mutated_line = line_num;
			visit(mutant_var);
			writeLog(removeNewline(original_var.toString()+" => "+mutant_var.toString()));
			// -------------------------------------------------------------
      }else{
		  super.visit(p);
      }
    }
}
