////////////////////////////////////////////////////////////////////////////
// Module : ClassMutantsViewerPanel.java
// Author : Ma, Yu-Seung
// COPYRIGHT 2005 by Yu-Seung Ma, ALL RIGHTS RESERVED.
////////////////////////////////////////////////////////////////////////////

package mujava.gui;

import java.io.*;
import java.awt.*;
import javax.swing.*;
import javax.swing.border.TitledBorder;
import mujava.MutationSystem;
import mujava.util.*;
//import javax.swing.table.AbstractTableModel;
import mujava.gui.util.CMSummaryTableModel;
/**
 * <p>Title: </p>
 * <p>Description: </p>
 * <p>Copyright: Copyright (c) 2004</p>
 * <p>Company: </p>
 * @author unascribed
 * @version 1.0
 */

public class ClassMutantsViewerPanel extends MutantsViewerPanel {

  public ClassMutantsViewerPanel() {
    try {
      jbInit();
    }
    catch(Exception ex) {
      ex.printStackTrace();
    }
  }

  void setMutationType(){
    MutationSystem.MUTANT_PATH = MutationSystem.CLASS_MUTANT_PATH;
  }

  void setSummaryTableSize(){
    int temp = MutationSystem.cm_operators.length*20;
    summaryPanel.setPreferredSize(new Dimension(150,temp));
    summaryPanel.setMaximumSize(new Dimension(150,temp));
  }

  void initSummaryTable(){
    CMSummaryTableModel tmodel = new CMSummaryTableModel();
    summaryTable = new JTable(tmodel);
    adjustSummaryTableSize(summaryTable,tmodel);
  }


  boolean isProperClass(String str){
    File f = new File(MutationSystem.MUTANT_HOME,str);
    File[] dirs = f.listFiles(new DirFileFilter());
    if((dirs==null)||(dirs.length==0)) return false;
    String[] names = {"class_mutants","original"};
    for(int i=0;i<names.length;i++){
      boolean found = false;
      for(int j=0;j<dirs.length;j++){
        if(dirs[j].getName().equals(names[i])){
          found=true;
          break;
        }
      }
      if(!found) return false;
    }
    return true;
  }

  void updateContents(){

    MutationSystem.MUTANT_PATH = MutationSystem.CLASS_MUTANT_PATH;

    File mutant_dir = new File(MutationSystem.CLASS_MUTANT_PATH);
    String[] mutants = mutant_dir.list(new MutantDirFilter());
    showGeneratedMutantsNum(mutants);
    mList.setListData(mutants);
    mList.repaint();
    clearSourceContents();
    showOriginal();
  }

  void showGeneratedMutantsNum(String[] name){
    if(name!=null){
      int[] num = new int[MutationSystem.cm_operators.length];
      for(int i=0; i<MutationSystem.cm_operators.length; i++){
        num[i] = 0;
      }
      for(int i=0;i<name.length;i++){
        for(int j=0; j<MutationSystem.cm_operators.length;j++){
         if(name[i].indexOf(MutationSystem.cm_operators[j]+"_")==0){ num[j]++;}
        }
      }

      int total = 0;
      CMSummaryTableModel myModel = (CMSummaryTableModel)(summaryTable.getModel());
      for(int i=0;i<MutationSystem.cm_operators.length;i++){
        myModel.setValueAt(new Integer(num[i]),i,1);
        total = total + num[i];
      }
      totalLabel.setText("Total : "+total);
    }else{
      int[] num = new int[MutationSystem.cm_operators.length];
      for(int i=0; i<MutationSystem.cm_operators.length; i++){
        num[i] = 0;
      }

      int total = 0;
      CMSummaryTableModel myModel = (CMSummaryTableModel)(summaryTable.getModel());
      for(int i=0;i<MutationSystem.cm_operators.length;i++){
        myModel.setValueAt(new Integer(num[i]),i,1);
        total = total + num[i];
      }
      totalLabel.setText("Total : "+total);
    }
  }
}

